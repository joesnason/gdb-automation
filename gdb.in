file main.elf
target remote :3333
# enable log file, file name is gdb.txt
set logging on
set $osp = $sp
set $sp = $sp - sizeof(GPIO_InitTypeDef) * 2 - sizeof(USART_InitTypeDef) * 2
b main.c:5
c
call RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE)
call RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE)
set ((GPIO_InitTypeDef*)$osp)->GPIO_Pin = GPIO_Pin_3
set ((GPIO_InitTypeDef*)$osp)->GPIO_Mode = GPIO_Mode_IN_FLOATING
call GPIO_Init(GPIOA, $osp)
set ((GPIO_InitTypeDef*)$osp)->GPIO_Pin = GPIO_Pin_2
set ((GPIO_InitTypeDef*)$osp)->GPIO_Speed = GPIO_Speed_50MHz
set ((GPIO_InitTypeDef*)$osp)->GPIO_Mode = GPIO_Mode_AF_PP
call GPIO_Init(GPIOA, $osp)
c
set ((USART_InitTypeDef*)$osp)->USART_BaudRate = 9600
set ((USART_InitTypeDef*)$osp)->USART_WordLength = USART_WordLength_8b
set ((USART_InitTypeDef*)$osp)->USART_StopBits = USART_StopBits_1
set ((USART_InitTypeDef*)$osp)->USART_Parity = USART_Parity_No
set ((USART_InitTypeDef*)$osp)->USART_HardwareFlowControl = USART_HardwareFlowControl_None
set ((USART_InitTypeDef*)$osp)->USART_Mode = USART_Mode_Rx | USART_Mode_Tx
call USART_Init(USART2, $osp)
call USART_Cmd(USART2, ENABLE)
c

# send string "Hello" to USART
set $get_osp = input_str
while(*(input_str) !='\0')
	call USART_SendData(USART2,*(input_str))
	set input_str+=1
end
c

# save the input data
dump memory result $get_osp ($get_osp + 6)
c

# dump result test 
#set $more_osp = $get_osp + 6
#restore result binary $more_osp
#while(*(char *)$more_osp !='\0')
#    call USART_SendData(USART2,*(char *)$more_osp)
#    set $more_osp+=1
#end
